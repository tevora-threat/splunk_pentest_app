import splunk.admin as admin
import splunk.entity as en


def log(text):
    with open('/opt/splunk/etc/apps/TA_pentest/log.txt', 'a') as file:
        file.write(text)


class ConfigApp(admin.MConfigHandler):
    
    CONF_FILE  = 'shells'
    def setup(self):
        if self.requestedAction == admin.ACTION_EDIT:
            for arg in ['type', 'ip', 'interval']:
                self.supportedArgs.addOptArg(arg)


    def handleList(self, confInfo):
        confDict = self.readConf(self.CONF_FILE)
        log(str(confDict))
        if None != confDict:
            for stanza, settings in confDict.items():
                for key, val in settings.items():
                    if val in [None, '']:
                        val = ''
                    confInfo[stanza].append(key, val)

    def handleEdit (self, confInfo):
        name = self.callerArgs.id
        args = self.callerArgs
        self.writeConf(self.CONF_FILE, name, args)
admin.init(ConfigApp, admin.CONTEXT_NONE)

